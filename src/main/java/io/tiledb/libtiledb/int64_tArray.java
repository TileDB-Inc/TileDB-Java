/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.1.1
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.tiledb.libtiledb;

public class int64_tArray {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected int64_tArray(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(int64_tArray obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected static long swigRelease(int64_tArray obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        tiledbJNI.delete_int64_tArray(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int64_tArray(long nelements) {
    this(tiledbJNI.new_int64_tArray(nelements), true);
  }

  public long getitem(long index) {
    return tiledbJNI.int64_tArray_getitem(swigCPtr, this, index);
  }

  public void setitem(long index, long value) {
    tiledbJNI.int64_tArray_setitem(swigCPtr, this, index, value);
  }

  public SWIGTYPE_p_long_long cast() {
    long cPtr = tiledbJNI.int64_tArray_cast(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_long_long(cPtr, false);
  }

  public static int64_tArray frompointer(SWIGTYPE_p_long_long t) {
    long cPtr = tiledbJNI.int64_tArray_frompointer(SWIGTYPE_p_long_long.getCPtr(t));
    return (cPtr == 0) ? null : new int64_tArray(cPtr, false);
  }
}
